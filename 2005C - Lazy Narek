#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
using ll = long long;
const int mod = 1e9 + 7;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

string narek = "narek";

int main() {
	int t;
	cin >> t;
	while(t--){
		ll n, m;
		cin >> n >> m;
		vector<string> v(n);
		for(int i = 0; i < n; i++){
			cin >> v[i];
		}
		vector<ll> dp(5, -1e9), tmp;
		dp[0] = 0;
		for(int i = 0; i < n; i++){
			tmp = dp;
			for(int j = 0; j < 5; j++){
				if(dp[j] == -1e9) continue;
				ll ans = 0, next = j;
				for(int k = 0; k < m; k++){
					int idx = narek.find(v[i][k]);
					if(idx == -1) continue;
					if(idx == next){
						next++;
						next %= 5;
						ans++;
					}else ans--;
				}
				tmp[next] = max(tmp[next], dp[j] + ans);
			}
			dp = tmp;
		}
		ll ans = 0;
		for(int i = 0; i < 5; i++) ans = max(ans, dp[i] - 2*i);
		cout << ans << endl;
	}
}
