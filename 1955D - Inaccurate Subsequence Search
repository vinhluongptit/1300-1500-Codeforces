#include <bits/stdc++.h>
using namespace std;
using ll = long long;

int main() 
{
  int t;
  cin >> t;
  while(t--){
    int n, m, k;
    cin >> n >> m >> k;
    vector<int> a(n);
    for(int i = 0; i < n; i++) cin >> a[i];
    multiset<int> avail, same, diff;
    for(int i = 0; i < m; i++){
      int x; cin >> x;
      avail.insert(x);
    }
    for(int i = 0; i < m; i++){
      if(avail.find(a[i]) != avail.end()){
        avail.erase(avail.find(a[i]));
        same.insert(a[i]);
      }else diff.insert(a[i]);
    }
    int ans = (same.size() >= k);
    for(int i = m; i < n; i++){
      int tmp = a[i-m];
      if(diff.find(tmp) != diff.end()){
        diff.erase(diff.find(tmp));
      }else if(same.find(tmp) != same.end()){
        same.erase(same.find(tmp));
        avail.insert(tmp);
      }
      
      if(avail.find(a[i]) != avail.end()){
        same.insert(a[i]);
        avail.erase(avail.find(a[i]));
      }else diff.insert(a[i]);
      if(same.size() >= k){
        ans++;
      }
    }
    cout << ans << endl;
  }
}
