#include <bits/stdc++.h>
using namespace std;
using ll = long long;
int mod = 1e9 + 7;

vector<int> tmp(200001, 1e9);
vector<vector<int>> ke(200001);
vector<int> val(200001); 

void dfs(int idx){
	int ok = 1;
	for(auto it : ke[idx]){
		ok = 0;
		dfs(it);
		tmp[idx] = min(tmp[idx], tmp[it]);
	}
	if(ok){
		tmp[idx] = val[idx];
	}
	if(idx != 1){
		int hi = tmp[idx] - val[idx];
		if(hi > 0){
			tmp[idx] = val[idx] + hi/2;
		}
	}
	return;
}

int main() 
{
  int t;
  cin >> t;
  while(t--){
  	int n;
  	cin >> n;
  	vector<int> v(n+1);
  	for(int i = 1; i <= n; i++){
  		cin >> val[i];
	}
	for(int i = 2; i <= n; i++){
		int x; cin >> x;
		ke[x].push_back(i);
	}
	dfs(1);
	cout << tmp[1] + val[1] << endl;
	for(int i = 1; i <= n; i++) tmp[i] = 1e9;
	for(int i = 1; i <= n; i++) ke[i].clear();
  }
}
